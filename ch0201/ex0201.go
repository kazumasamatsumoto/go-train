package main

import (
	"fmt"
	"math/cmplx"
)

func main() { //liststart
	x := complex(2.5, 3.1)
	y := complex(10.2, 2)
	fmt.Println(x + y)        // (12.7+5.1i)
	fmt.Println(x - y)        // (-7.699999999999999+1.1i)
	fmt.Println(x * y)        // (19.3+36.62i)
	fmt.Println(x / y)        // (0.2934098482043688+0.24639022584228065i)
	fmt.Println(real(x))      // 2.5
	fmt.Println(imag(x))      // 3.1
	fmt.Println(cmplx.Abs(x)) // 3.982461550347975
} //listend

// Go言語において、「main」パッケージはディレクトリ（パッケージ）内に1つだけ存在するという考え方は正しいです。具体的には、次の点に注意する必要があります：

// パッケージと「main」関数のルール
// 「main」パッケージの要件:

// main関数は、package mainと宣言されたパッケージにのみ存在することができます。
// package mainは、そのパッケージが実行可能なプログラムであることを意味します。
// main関数は、Goプログラムのエントリーポイントであり、必ず1つだけ存在する必要があります。
// 複数ファイルの扱い:

// 同じディレクトリ内にある複数のGoファイルは、同じパッケージ名を共有します。つまり、ディレクトリ内のすべてのファイルはpackage mainである必要があります。
// ただし、そのディレクトリ内には1つのmain関数だけが存在する必要があります。複数のmain関数があると、コンパイルエラーになります。

// まとめ
// 同じディレクトリ内に複数のpackage mainを含むファイルを持つことは問題ありません。
// ただし、そのディレクトリ内にmain関数は一つだけである必要があります。
// 複数のmain関数が必要な場合は、ディレクトリを分けて独立したパッケージとして扱うようにします。
